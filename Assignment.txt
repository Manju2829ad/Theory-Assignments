
Week 2-23rd october 

1. 
Arithmetic Operators
Relational Operators
Logical Operators
Assignment Operators
Unary Operators
Bitwise Operators



2. 

Explain Increment and Decrement Operators and Give Examples:

Increment and Decrement Operators in Java are used to increase or decrease the value by 1. For example:

The increment operator ++ is used to increase the existing variable value by 1 (i = i + 1).
The decrement operator -- is used to decrease or subtract the current value by 1 (i = i - 1).



3. Conditional operators are used when you need to evaluate more than one boolean expression. For instance,
if you want to print a number only if it is greater than 2 and less than 5,
 you would use conditional operators to combine the expressions. We have 3 types of conditional operators:

Logical-and Operator (&&): Used when the condition is true only if both expressions are true.

if (condition1 && condition2) {
    // statements
}

Logical-or Operator (||): Used when the condition is true if at least one of the boolean expressions is true.
if (condition1 || condition2) {
    // statements
}


Ternary Operator (?:): A shorthand for the if-else statement. If the condition is true, then statement1 is executed; otherwise, statement2 is executed.

java
Copy code
condition ? statement1 : statement2;


4 . There are three types of operators in Java based on the number of operands:

Unary Operators: Operate on a single operand.
Binary Operators: Operate on two operands.
Ternary Operators: Operate on three operands.


5. What Are Conditional Statements and Their Use in Java?

Conditional statements are used to execute a block of code based on whether a condition is true or false. The types of conditional statements in Java are:


6. 
if Statement: Specifies a block of code to be executed if a specific condition is true.

java
Copy code
if (condition) {
    // block of code
}

else Statement: Specifies a block of code to be executed if the condition in the if statement is false.

java
Copy code
if (condition) {
    // block of code
} else {
    // block of code
}


else-if Statement: Specifies a new condition to test if the previous condition is false.

java
Copy code
if (condition1) {
    // block of code
} else if (condition2) {
    // block of code
} else {
    // block of code
}


switch Statement: Specifies multiple alternative blocks of code based on the value of an expression.

java
Copy code
switch (expression) {
    case value1:
        // block of code
        break;
    case value2:
        // block of code
        break;
    default:
        // block of code
}


7.The three types of iterative statements (loops) in Java are:

for Loop: Used for iterating a block of code a fixed number of times.

java
Copy code
for (initialization; condition; update) {
    // block of code
}
while Loop: Repeats a block of code as long as the specified condition is true.

java
Copy code
while (condition) {
    // block of code
}
do-while Loop: Similar to the while loop, but it guarantees that the block of code is executed at least once.

java
Copy code
do {
    // block of code
} while (condition);



8.An array refers to a collection of elements of the same type stored in contiguous memory locations. It allows you to store multiple values in a single variable, improving the organization and reliability of your program.

9. How to Create an Array?

Array Declarations:

Single Dimension Array:

java
Copy code
int[] array;
Two-Dimensional Array:

java
Copy code
int[][] array;
Three-Dimensional Array:

java
Copy code
int[][][] array;
Array Initialization:

Using the new operator:

java
Copy code
int[] array = new int[5];
Or initializing with values:

java
Copy code
int[] array = {1, 2, 3, 4, 5};

10.StringBuffer and StringBuilder are Java classes for manipulating strings. They are mutable objects, meaning they can be modified, and provide various methods such as insert(), substring(), delete(), and append() for string manipulation.

StringBuffer: Introduced in Java 1.0, StringBuffer is synchronized, meaning it is thread-safe. This makes it slower but ensures that multiple threads can access it safely.

java
Copy code
StringBuffer sb = new StringBuffer("initial");
StringBuilder: Introduced in Java 1.5, StringBuilder is similar to StringBuffer but without synchronization. It is faster and more efficient but not thread-safe.

java
Copy code
StringBuilder sb = new StringBuilder("initial");
Both classes are used for manipulating strings when you need a mutable string object, but StringBuilder is preferred in single-threaded scenarios for better performance.
